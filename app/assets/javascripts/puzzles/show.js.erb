var board,
  game = new Chess();

var solution = $("#board").attr("solution").split(":");

// do not pick up pieces if the game is over
// only pick up pieces for the side to move
var onDragStart = function(source, piece, position, orientation) {
  if (game.game_over() === true ||
      (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
      (game.turn() === 'b' && piece.search(/^w/) !== -1) ||
      (solution.length < 1)) {
    return false;
  }
};

var onDrop = function(source, target) {
  // see if the move is legal
  var move = game.move({
    from: source,
    to: target,
    promotion: 'q' // NOTE: always promote to a queen for example simplicity
  });

  // illegal move
  if (move === null) return 'snapback';

  // correct move
  var correctMove = solution[0];
  if (move.san !== correctMove) {
    game.undo();
    return 'snapback';
  }
  solution.shift();

  // solved
  if (solution.length < 1) {
    alert("10 points!");
  }
};

// update the board position after the piece snap
// for castling, en passant, pawn promotion
var onSnapEnd = function() {
  board.position(game.fen());
};

var position = $("#board").attr("start-position");
var toMove = $("#board").attr("to-move");

var cfg = {
  draggable: true,
  position: position,
  orientation: toMove,
  onDragStart: onDragStart,
  onDrop: onDrop,
  onSnapEnd: onSnapEnd
};
board = ChessBoard('board', cfg);
game.load($("#board").attr("fen"));
